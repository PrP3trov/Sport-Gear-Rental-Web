@model SportGearRental.ViewModels.SportGear.SportGearQueryModel
@using Microsoft.AspNetCore.Identity
@using SportGearRental.Data.Models
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "All Sport Gear";
    var currentUserId = UserManager.GetUserId(User);
}

<h2 class="text-center">All Sport Gear</h2>
<hr />

<!-- FILTER FORM -->
<form method="get" class="row g-3 mb-4 align-items-end">
    <div class="col-md-3">
        <label class="form-label">Search</label>
        <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search by name or description" />
    </div>

    <div class="col-md-2">
        <label class="form-label">Category</label>
        <select name="categoryId" class="form-select">
            <option value="">All</option>
            @foreach (var c in Model.Categories)
            {
                <option value="@c.Id" selected="@(Model.CategoryId == c.Id)">@c.Name</option>
            }
        </select>
    </div>

    <div class="col-md-2">
        <label class="form-label">Brand</label>
        <select name="brandId" class="form-select">
            <option value="">All</option>
            @foreach (var b in Model.Brands)
            {
                <option value="@b.Id" selected="@(Model.BrandId == b.Id)">@b.Name</option>
            }
        </select>
    </div>

    <div class="col-md-2">
        <label class="form-label">Condition</label>
        <select name="conditionId" class="form-select">
            <option value="">Any</option>
            @foreach (var gc in Model.Conditions)
            {
                <option value="@gc.Id" selected="@(Model.ConditionId == gc.Id)">@gc.Name</option>
            }
        </select>
    </div>

    <div class="col-md-2">
        <label class="form-label">Max Price (@Model.MaxPrice - 200)</label>
        <input type="range" name="maxPrice" min="0" max="200" value="@Model.MaxPrice" class="form-range"
               oninput="this.nextElementSibling.value = this.value" />
        <output>@Model.MaxPrice</output>
    </div>

    <div class="col-md-1">
        <label class="form-label">Min Rating</label>
        <select name="minRating" class="form-select">
            <option value="">Any</option>
            @for (int i = 1; i <= 5; i++)
            {
                <option value="@i" selected="@(Model.MinRating == i)">@i ★</option>
            }
        </select>
    </div>

    <div class="col-12 text-end">
        <button type="submit" class="btn btn-primary">Apply Filters</button>
    </div>
</form>

@if (User.Identity?.IsAuthenticated ?? false)
{
    <div class="mb-4 text-end">
        <a asp-action="Create" class="btn btn-success">➕ Add New Gear</a>
    </div>
}

<!-- GEAR LIST -->
<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var gear in Model.Gears)
    {
        <div class="col">
            <div class="card h-100">
                <img src="@gear.ImageUrl" class="card-img-top" alt="@gear.Name" style="height: 250px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@gear.Name</h5>
                    <p class="card-text">Price/Day: <strong>@gear.PricePerDay.ToString("C")</strong></p>
                </div>
                <div class="card-footer text-center">
                    <a asp-action="Details" asp-route-id="@gear.Id" class="btn btn-outline-primary btn-sm">Details</a>
                    @if (gear.OwnerId == currentUserId)
                    {
                        <a asp-action="Edit" asp-route-id="@gear.Id" class="btn btn-warning btn-sm">Edit</a>
                        <button type="button" class="btn btn-danger btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteModal"
                                data-gear-id="@gear.Id"
                                data-gear-name="@gear.Name">
                            Delete
                        </button>
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- DELETE CONFIRMATION MODAL -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="gearName"></strong>?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var gearId = button.getAttribute('data-gear-id');
            var gearName = button.getAttribute('data-gear-name');

            var modalGearName = deleteModal.querySelector('#gearName');
            modalGearName.textContent = gearName;

            var form = deleteModal.querySelector('#deleteForm');
            form.action = '/SportGear/Delete/' + gearId;
        });
    </script>
}
