@model SportGearRental.ViewModels.SportGear.SportGearQueryModel
@using Microsoft.AspNetCore.Identity
@using SportGearRental.Data.Models
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "All Sport Gear";
    var currentUserId = UserManager.GetUserId(User);
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<style>
    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        min-height: 100vh;
    }

    .gear-index-container {
        padding: 2rem;
        animation: fadeInUp 0.6s ease-out;
    }

    .page-header {
        background: linear-gradient(135deg, rgba(255,255,255,0.95), rgba(255,255,255,0.85));
        backdrop-filter: blur(10px);
        padding: 3rem 2rem;
        border-radius: 25px;
        text-align: center;
        margin-bottom: 2rem;
        box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        position: relative;
        overflow: hidden;
    }

        .page-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient( 45deg, transparent, transparent 15px, rgba(102, 126, 234, 0.05) 15px, rgba(102, 126, 234, 0.05) 30px );
            animation: slidePattern 6s linear infinite;
        }

    .header-icon {
        font-size: 3.5rem;
        margin-bottom: 1rem;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: bounce 2s infinite;
        position: relative;
        z-index: 2;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 300;
        margin: 0;
        color: #2c3e50;
        position: relative;
        z-index: 2;
    }

    .page-subtitle {
        opacity: 0.7;
        margin-top: 0.5rem;
        font-size: 1.1rem;
        color: #34495e;
        position: relative;
        z-index: 2;
    }

    .filter-section {
        background: rgba(255,255,255,0.95);
        backdrop-filter: blur(10px);
        padding: 2.5rem;
        border-radius: 20px;
        margin-bottom: 2rem;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        animation: slideInLeft 0.8s ease-out;
    }

    .filter-header {
        display: flex;
        align-items: center;
        margin-bottom: 2rem;
        color: #2c3e50;
    }

        .filter-header i {
            font-size: 1.5rem;
            margin-right: 0.8rem;
            color: #667eea;
        }

        .filter-header h4 {
            margin: 0;
            font-weight: 600;
        }

    .form-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.8rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .form-label i {
            color: #667eea;
            font-size: 1rem;
        }

    .form-control, .form-select {
        border: 2px solid #e1e8ed;
        border-radius: 12px;
        padding: 0.8rem 1rem;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }

        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .form-control:hover, .form-select:hover {
            border-color: #667eea;
            background: white;
        }

    .form-range {
        -webkit-appearance: none;
        background: transparent;
        cursor: pointer;
    }

        .form-range::-webkit-slider-track {
            background: linear-gradient(135deg, #667eea, #764ba2);
            height: 6px;
            border-radius: 3px;
        }

        .form-range::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: 20px;
            width: 20px;
            border-radius: 50%;
            background: #667eea;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .form-range::-webkit-slider-thumb:hover {
                transform: scale(1.2);
                box-shadow: 0 6px 16px rgba(102, 126, 234, 0.5);
            }

    .filter-actions {
        text-align: center;
        margin-top: 2rem;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
        border: none;
        padding: 1rem 2.5rem;
        border-radius: 50px;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #764ba2, #667eea);
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(102, 126, 234, 0.5);
        }

    .add-gear-section {
        text-align: right;
        margin-bottom: 2rem;
        animation: slideInRight 0.8s ease-out;
    }

    .btn-success {
        background: linear-gradient(135deg, #2ecc71, #27ae60);
        border: none;
        padding: 1rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
        box-shadow: 0 8px 20px rgba(46, 204, 113, 0.3);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.8rem;
        animation: addButtonPulse 3s infinite;
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #27ae60, #229954);
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(46, 204, 113, 0.5);
            color: white;
            text-decoration: none;
        }

    .gear-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
        animation: fadeInUp 1s ease-out;
    }

    .gear-card {
        background: rgba(255,255,255,0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        position: relative;
        animation: cardSlideIn 0.6s ease-out;
        border: 1px solid rgba(255,255,255,0.2);
    }

        .gear-card:hover {
            transform: translateY(-15px) scale(1.02);
            box-shadow: 0 25px 50px rgba(0,0,0,0.2);
        }

        .gear-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, #667eea, #764ba2);
        }

    .card-img-top {
        height: 250px;
        object-fit: cover;
        transition: all 0.3s ease;
        position: relative;
    }

    .gear-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .card-body {
        padding: 2rem;
        position: relative;
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.8rem;
    }

        .card-title::before {
            content: '';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            color: #667eea;
            font-size: 1.1rem;
        }

    .price-tag {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 25px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.1rem;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    .card-footer {
        background: rgba(248, 249, 250, 0.8);
        border-top: 1px solid rgba(0,0,0,0.05);
        padding: 1.5rem 2rem;
        display: flex;
        gap: 0.8rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn-sm {
        padding: 0.6rem 1.2rem;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        border: none;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .btn-outline-primary {
        background: white;
        color: #667eea;
        border: 2px solid #667eea;
    }

        .btn-outline-primary:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);
        }

    .btn-warning {
        background: linear-gradient(135deg, #f39c12, #e67e22);
        color: white;
    }

        .btn-warning:hover {
            background: linear-gradient(135deg, #e67e22, #d35400);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(243, 156, 18, 0.4);
            color: white;
        }

    .btn-danger {
        background: linear-gradient(135deg, #e74c3c, #c0392b);
        color: white;
    }

        .btn-danger:hover {
            background: linear-gradient(135deg, #c0392b, #a93226);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(231, 76, 60, 0.4);
            color: white;
        }

    .modal-content {
        border-radius: 20px;
        border: none;
        box-shadow: 0 25px 50px rgba(0,0,0,0.3);
    }

    .modal-header {
        border-radius: 20px 20px 0 0;
        border-bottom: 1px solid rgba(0,0,0,0.1);
        padding: 2rem;
    }

        .modal-header.bg-danger {
            background: linear-gradient(135deg, #e74c3c, #c0392b) !important;
        }

    .modal-body {
        padding: 2rem;
    }

    .modal-footer {
        border-top: 1px solid rgba(0,0,0,0.1);
        padding: 1.5rem 2rem;
        border-radius: 0 0 20px 20px;
    }

    .floating-shapes {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        overflow: hidden;
        z-index: -1;
    }

    .shape {
        position: absolute;
        opacity: 0.03;
        animation: float 10s ease-in-out infinite;
    }

        .shape:nth-child(1) {
            top: 10%;
            left: 5%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            top: 50%;
            right: 10%;
            animation-delay: 3s;
        }

        .shape:nth-child(3) {
            bottom: 20%;
            left: 15%;
            animation-delay: 6s;
        }

    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    @@keyframes slideInLeft {
        from

    {
        opacity: 0;
        transform: translateX(-30px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }

    }

    @@keyframes slideInRight {
        from

    {
        opacity: 0;
        transform: translateX(30px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }

    }

    @@keyframes cardSlideIn {
        from

    {
        opacity: 0;
        transform: translateY(50px) scale(0.95);
    }

    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }

    }

    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100%

    {
        transform: translateY(0);
    }

    40% {
        transform: translateY(-10px);
    }

    60% {
        transform: translateY(-5px);
    }

    }

    @@keyframes float {
        0%, 100%

    {
        transform: translateY(0px) rotate(0deg);
    }

    50% {
        transform: translateY(-20px) rotate(180deg);
    }

    }

    @@keyframes addButtonPulse {
        0%, 100%

    {
        box-shadow: 0 8px 20px rgba(46, 204, 113, 0.3);
    }

    50% {
        box-shadow: 0 8px 20px rgba(46, 204, 113, 0.6);
    }

    }

    @@keyframes slidePattern {
        0%

    {
        transform: translateX(-50px);
    }

    100% {
        transform: translateX(50px);
    }

    }

    @@media (max-width: 768px) {
        .gear-index-container

    {
        padding: 1rem;
    }

    .page-header {
        padding: 2rem 1.5rem;
    }

    .page-title {
        font-size: 2rem;
    }

    .filter-section {
        padding: 1.5rem;
    }

    .gear-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .card-footer {
        flex-direction: column;
    }

    .btn-sm {
        justify-content: center;
    }

    }
</style>

<div class="gear-index-container">
    <!-- Floating Background Shapes -->
    <div class="floating-shapes">
        <div class="shape">
            <i class="fas fa-dumbbell" style="font-size: 80px; color: #667eea;"></i>
        </div>
        <div class="shape">
            <i class="fas fa-bicycle" style="font-size: 70px; color: #764ba2;"></i>
        </div>
        <div class="shape">
            <i class="fas fa-football-ball" style="font-size: 75px; color: #667eea;"></i>
        </div>
    </div>

    <!-- Page Header -->
    <div class="page-header">
        <div class="header-icon">
            <i class="fas fa-store"></i>
        </div>
        <h2 class="page-title">All Sport Gear</h2>
        <p class="page-subtitle">Discover and rent amazing sports equipment</p>
    </div>

    <!-- FILTER FORM -->
    <div class="filter-section">
        <div class="filter-header">
            <i class="fas fa-filter"></i>
            <h4>Filter & Search</h4>
        </div>

        <form method="get" class="row g-3 align-items-end">
            <div class="col-md-3">
                <label class="form-label">
                    <i class="fas fa-search"></i>
                    Search
                </label>
                <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search by name or description" />
            </div>

            <div class="col-md-2">
                <label class="form-label">
                    <i class="fas fa-tags"></i>
                    Category
                </label>
                <select name="categoryId" class="form-select">
                    <option value="">Всички</option>
                    @foreach (var c in Model.Categories)
                    {
                        <option value="@c.Id" selected="@(Model.CategoryId == c.Id)">@c.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-2">
                <label class="form-label">
                    <i class="fas fa-trademark"></i>
                    Brand
                </label>
                <select name="brandId" class="form-select">
                    <option value="">All</option>
                    @foreach (var b in Model.Brands)
                    {
                        <option value="@b.Id" selected="@(Model.BrandId == b.Id)">@b.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-2">
                <label class="form-label">
                    <i class="fas fa-tools"></i>
                    Condition
                </label>
                <select name="conditionId" class="form-select">
                    <option value="">Any</option>
                    @foreach (var gc in Model.Conditions)
                    {
                        <option value="@gc.Id" selected="@(Model.ConditionId == gc.Id)">@gc.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-2">
                <label class="form-label">
                    <i class="fas fa-dollar-sign"></i>
                    Max Price (@Model.MaxPrice - 200)
                </label>
                <input type="range" name="maxPrice" min="0" max="200" value="@Model.MaxPrice" class="form-range"
                       oninput="this.nextElementSibling.value = this.value" />
                <output>@Model.MaxPrice</output>
            </div>

            <div class="col-md-1">
                <label class="form-label">
                    <i class="fas fa-star"></i>
                    Min Rating
                </label>
                <select name="minRating" class="form-select">
                    <option value="">Any</option>
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i" selected="@(Model.MinRating == i)">@i ★</option>
                    }
                </select>
            </div>

            <div class="col-12 filter-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-search"></i>
                    Apply Filters
                </button>
            </div>
        </form>
    </div>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <div class="add-gear-section">
            <a asp-action="Create" class="btn btn-success">
                <i class="fas fa-plus"></i>
                Add New Gear
            </a>
        </div>
    }

    <!-- GEAR LIST -->
    <div class="gear-grid">
        @foreach (var gear in Model.Gears.Select((value, index) => new { value, index }))
        {
            <div class="gear-card" style="animation-delay: @(gear.index * 0.1)s">
                <img src="@gear.value.ImageUrl" class="card-img-top" alt="@gear.value.Name">
                <div class="card-body">
                    <h5 class="card-title">@gear.value.Name</h5>
                    <div class="price-tag">
                        <i class="fas fa-tag"></i>
                        @gear.value.PricePerDay.ToString("C")/day
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-action="Details" asp-route-id="@gear.value.Id" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-eye"></i>
                        Details
                    </a>

                    @if (gear.value.OwnerId == currentUserId)
                    {
                        <a asp-action="Edit" asp-route-id="@gear.value.Id" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i>
                            Edit
                        </a>
                        <button type="button" class="btn btn-danger btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteModal"
                                data-gear-id="@gear.value.Id"
                                data-gear-name="@gear.value.Name">
                            <i class="fas fa-trash-alt"></i>
                            Delete
                        </button>
                    }
                    else if (User.Identity?.IsAuthenticated ?? false)
                    {
                        <button type="button" class="btn btn-success btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#rentalModal"
                                data-gear-id="@gear.value.Id"
                                data-price="@gear.value.PricePerDay">
                            <i class="fas fa-handshake"></i>
                            Наеми
                        </button>
                    }
                </div>
            </div>
        }
    </div>
</div>

<!-- DELETE CONFIRMATION MODAL -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle"></i>
                    Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="gearName"></strong>?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash-alt"></i>
                        Yes, Delete
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times"></i>
                        Cancel
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- RENTAL MODAL -->
<div class="modal fade" id="rentalModal" tabindex="-1" aria-labelledby="rentalModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Rental" asp-action="CreateQuickRental" method="post" id="rentalForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="rentalModalLabel">
                        <i class="fas fa-handshake"></i>
                        Наемане на екипировка
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <div class="modal-body">
                    <!-- Скрито поле за ID на екипировката -->
                    <input type="hidden" id="gearId" name="SportGearId" />

                    <!-- Начална дата -->
                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-play-circle"></i>
                            Начална дата
                        </label>
                        <input type="date" class="form-control" id="startDate" name="StartDate"
                               min="@DateTime.UtcNow.ToString("yyyy-MM-dd")" required />
                    </div>

                    <!-- Крайна дата -->
                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-stop-circle"></i>
                            Крайна дата
                        </label>
                        <input type="date" class="form-control" id="endDate" name="EndDate"
                               min="@DateTime.UtcNow.ToString("yyyy-MM-dd")" required />
                    </div>

                    <!-- Цена на ден -->
                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-tag"></i>
                            Цена на ден
                        </label>
                        <input type="text" class="form-control" id="pricePerDay" readonly />
                    </div>

                    <!-- Обща цена -->
                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-calculator"></i>
                            Обща цена
                        </label>
                        <input type="text" class="form-control" id="totalPrice" readonly />
                    </div>

                    <!-- Поле за грешка -->
                    <div id="dateError" class="text-danger mb-2" style="display:none; font-weight:bold;"></div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-check"></i>
                        Потвърди наем
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Enhanced page interactions
        document.addEventListener('DOMContentLoaded', function() {
            // Add floating animation to background shapes
            const shapes = document.querySelectorAll('.floating-shapes .shape');
            shapes.forEach((shape, index) => {
                shape.style.left = Math.random() * 90 + 5 + '%';
                shape.style.top = Math.random() * 90 + 5 + '%';
                shape.style.animationDelay = Math.random() * 10 + 's';
            });

            // Staggered animation for gear cards
            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        setTimeout(() => {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0)';
                        }, index * 100);
                    }
                });
            });

            const gearCards = document.querySelectorAll('.gear-card');
            gearCards.forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                card.style.transition = 'all 0.6s ease';
                observer.observe(card);
            });

            // Enhanced hover effects
            gearCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-15px) scale(1.02)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });
        });

        // Original delete modal functionality
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var gearId = button.getAttribute('data-gear-id');
            var gearName = button.getAttribute('data-gear-name');

            var modalGearName = deleteModal.querySelector('#gearName');
            modalGearName.textContent = gearName;

            var form = deleteModal.querySelector('#deleteForm');
            form.action = '/SportGear/Delete/' + gearId;
        });
    </script>

    <script>
        // Original rental modal functionality
        document.addEventListener('DOMContentLoaded', function () {
            let startDateInput = document.getElementById("startDate");
            let endDateInput = document.getElementById("endDate");
            let pricePerDayInput = document.getElementById("pricePerDay");
            let totalPriceInput = document.getElementById("totalPrice");
            let gearIdInput = document.getElementById("gearId");
            let dateError = document.getElementById("dateError");
            let rentalForm = document.getElementById("rentalForm");

            // При отваряне на модала
            document.querySelectorAll('[data-bs-target="#rentalModal"]').forEach(button => {
                button.addEventListener('click', function () {
                    let price = this.getAttribute('data-price');
                    let gearId = this.getAttribute('data-gear-id');

                    pricePerDayInput.value = parseFloat(price).toFixed(2) + " лв.";
                    gearIdInput.value = gearId;

                    totalPriceInput.value = "";
                    startDateInput.value = "";
                    endDateInput.value = "";
                    dateError.style.display = "none";
                });
            });

            // Минимална крайна дата според началната
            startDateInput.addEventListener("change", function () {
                endDateInput.setAttribute("min", this.value);
                updateTotalPrice();
            });

            // Пресмятане при промяна на крайната дата
            endDateInput.addEventListener("change", updateTotalPrice);

            // Преди изпращане на формата - проверка
            rentalForm.addEventListener("submit", function (e) {
                updateTotalPrice(); // гарантираме, че цената е изчислена

                if (!totalPriceInput.value) {
                    e.preventDefault();
                    dateError.innerText = "Моля, изберете валидни дати, за да се изчисли цената.";
                    dateError.style.display = "block";
                }
            });

            function updateTotalPrice() {
                let start = new Date(startDateInput.value);
                let end = new Date(endDateInput.value);
                let price = parseFloat(pricePerDayInput.value.replace(" лв.", ""));

                if (!startDateInput.value || !endDateInput.value) {
                    dateError.innerText = "Моля, изберете начална и крайна дата.";
                    dateError.style.display = "block";
                    totalPriceInput.value = "";
                    return;
                }

                if (end < start) {
                    dateError.innerText = "Крайната дата не може да е преди началната.";
                    dateError.style.display = "block";
                    totalPriceInput.value = "";
                    return;
                }

                let today = new Date();
                today.setHours(0,0,0,0);
                if (start < today) {
                    dateError.innerText = "Началната дата не може да е в миналото.";
                    dateError.style.display = "block";
                    totalPriceInput.value = "";
                    return;
                }

                dateError.style.display = "none";

                let days = Math.floor((end - start) / (1000 * 60 * 60 * 24)) + 1;
                let total = (days * price).toFixed(2);

                // Показваме с лв. за потребителя
                totalPriceInput.value = total + " лв.";
            }
        });
    </script>
}